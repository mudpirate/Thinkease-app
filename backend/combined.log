{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T11:14:18.693Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T11:14:18.701Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-08-21T11:22:05.671Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3000/api/inngest","timestamp":"2025-08-21T11:22:07.323Z"}
{"level":"info","message":"Server is running on port 3000","timestamp":"2025-08-21T11:22:40.761Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3000/api/inngest","timestamp":"2025-08-21T11:22:51.044Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T11:24:42.739Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T11:24:42.743Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T11:33:02.487Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T11:33:02.490Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T11:33:13.788Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T11:33:13.792Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T11:33:43.672Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T11:33:43.675Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T11:37:51.023Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T11:37:51.028Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T11:37:51.747Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T13:47:31.191Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T13:47:31.196Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T13:47:31.925Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T13:48:50.131Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T13:48:50.135Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T13:48:51.200Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T13:49:33.426Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T13:49:33.431Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T13:49:34.218Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T13:53:22.612Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T13:53:22.619Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T13:53:23.408Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T13:53:29.437Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T13:53:29.440Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T13:53:30.097Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T13:53:46.916Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T13:53:46.920Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T13:53:48.783Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:04:04.091Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:04:04.095Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:04:05.076Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:17:25.951Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:17:25.955Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:17:26.893Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:19:06.887Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:19:06.891Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:19:07.979Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:24:46.359Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:24:46.363Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:24:47.527Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:38:58.224Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:38:58.227Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:38:59.279Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:47:01.431Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:47:01.434Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:47:02.490Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:59:00.740Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:59:00.744Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:59:03.492Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:59:09.371Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:59:09.375Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:59:10.168Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:59:18.665Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:59:18.670Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:59:19.649Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T15:59:28.540Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T15:59:28.546Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T15:59:30.116Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T16:00:30.442Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T16:00:30.451Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T16:00:31.629Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T16:03:15.773Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T16:03:15.777Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T16:03:17.529Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T16:04:12.754Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T16:04:12.758Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T16:04:13.350Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T16:04:27.457Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T16:04:27.462Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T16:04:31.651Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T17:28:21.361Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T17:28:21.364Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T17:28:21.919Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-21T17:28:51.889Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-21T17:28:51.892Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-21T17:28:52.427Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:19:35.495Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:19:35.501Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:19:36.155Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:27:15.093Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:27:15.096Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:27:15.773Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:27:19.923Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:27:19.926Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:27:20.473Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:27:35.479Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:27:35.489Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:27:36.137Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:27:47.980Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:27:47.984Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:27:48.543Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:43:21.704Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:43:21.707Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:43:22.422Z"}
{"_message":"Activity validation failed","errors":{"duration":{"kind":"Number","message":"Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\"","name":"CastError","path":"duration","reason":{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":true,"operator":"=="},"stringValue":"\"30 minutes\"","value":"30 minutes","valueType":"string"},"type":{"kind":"enum","message":"`Running` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["meditation","exercise","walking","reading","journaling","therapy"],"message":"`Running` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Running"},"value":"Running"}},"level":"error","message":"Unexpected error: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.","stack":"ValidationError: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.\n    at model.Document.invalidate (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3358:32)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1132:16)\n    at model.Document (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:178:12)\n    at model.Model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:127:12)\n    at new model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:4834:15)\n    at logActivity (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\src\\controllers\\activityController.ts:21:22)\n    at Layer.handleRequest (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:117:3)","timestamp":"2025-08-26T07:53:10.165Z"}
{"_message":"Activity validation failed","errors":{"duration":{"kind":"Number","message":"Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\"","name":"CastError","path":"duration","reason":{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":true,"operator":"=="},"stringValue":"\"30 minutes\"","value":"30 minutes","valueType":"string"},"type":{"kind":"enum","message":"`Running` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["meditation","exercise","walking","reading","journaling","therapy"],"message":"`Running` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Running"},"value":"Running"}},"level":"error","message":"Unexpected error: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.","stack":"ValidationError: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.\n    at model.Document.invalidate (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3358:32)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1132:16)\n    at model.Document (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:178:12)\n    at model.Model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:127:12)\n    at new model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:4834:15)\n    at logActivity (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\src\\controllers\\activityController.ts:21:22)\n    at Layer.handleRequest (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:117:3)","timestamp":"2025-08-26T07:53:37.899Z"}
{"_message":"Activity validation failed","errors":{"duration":{"kind":"Number","message":"Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\"","name":"CastError","path":"duration","reason":{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":true,"operator":"=="},"stringValue":"\"30 minutes\"","value":"30 minutes","valueType":"string"},"type":{"kind":"enum","message":"`Running` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["meditation","exercise","walking","reading","journaling","therapy"],"message":"`Running` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Running"},"value":"Running"}},"level":"error","message":"Unexpected error: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.","stack":"ValidationError: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.\n    at model.Document.invalidate (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3358:32)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1132:16)\n    at model.Document (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:178:12)\n    at model.Model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:127:12)\n    at new model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:4834:15)\n    at logActivity (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\src\\controllers\\activityController.ts:21:22)\n    at Layer.handleRequest (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:117:3)","timestamp":"2025-08-26T07:54:29.484Z"}
{"_message":"Activity validation failed","errors":{"duration":{"kind":"Number","message":"Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\"","name":"CastError","path":"duration","reason":{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":true,"operator":"=="},"stringValue":"\"30 minutes\"","value":"30 minutes","valueType":"string"},"type":{"kind":"enum","message":"`Running` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["meditation","exercise","walking","reading","journaling","therapy"],"message":"`Running` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Running"},"value":"Running"}},"level":"error","message":"Unexpected error: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.","stack":"ValidationError: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.\n    at model.Document.invalidate (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3358:32)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1132:16)\n    at model.Document (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:178:12)\n    at model.Model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:127:12)\n    at new model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:4834:15)\n    at logActivity (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\src\\controllers\\activityController.ts:21:22)\n    at Layer.handleRequest (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:117:3)","timestamp":"2025-08-26T07:54:32.630Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:55:12.242Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:55:12.245Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:55:12.795Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T07:55:25.116Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T07:55:25.122Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T07:55:27.826Z"}
{"_message":"Activity validation failed","errors":{"duration":{"kind":"Number","message":"Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\"","name":"CastError","path":"duration","reason":{"actual":false,"code":"ERR_ASSERTION","expected":true,"generatedMessage":true,"operator":"=="},"stringValue":"\"30 minutes\"","value":"30 minutes","valueType":"string"},"type":{"kind":"enum","message":"`Running` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["meditation","exercise","walking","reading","journaling","therapy"],"message":"`Running` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Running"},"value":"Running"}},"level":"error","message":"Unexpected error: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.","stack":"ValidationError: Activity validation failed: duration: Cast to Number failed for value \"30 minutes\" (type string) at path \"duration\", type: `Running` is not a valid enum value for path `type`.\n    at model.Document.invalidate (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3358:32)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1480:12)\n    at model.$set (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:1132:16)\n    at model.Document (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:178:12)\n    at model.Model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:127:12)\n    at new model (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\model.js:4834:15)\n    at logActivity (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\src\\controllers\\activityController.ts:21:22)\n    at Layer.handleRequest (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\layer.js:152:17)\n    at next (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:157:13)\n    at Route.dispatch (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\router\\lib\\route.js:117:3)","timestamp":"2025-08-26T07:55:34.729Z"}
{"_message":"Activity validation failed","errors":{"type":{"kind":"enum","message":"`Running` is not a valid enum value for path `type`.","name":"ValidatorError","path":"type","properties":{"enumValues":["meditation","exercise","walking","reading","journaling","therapy"],"message":"`Running` is not a valid enum value for path `type`.","path":"type","type":"enum","value":"Running"},"value":"Running"}},"level":"error","message":"Unexpected error: Activity validation failed: type: `Running` is not a valid enum value for path `type`.","stack":"ValidationError: Activity validation failed: type: `Running` is not a valid enum value for path `type`.\n    at model.Document.invalidate (C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3358:32)\n    at C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\document.js:3119:17\n    at C:\\Users\\Nomesh\\Desktop\\Thinkease Therapist app\\backend\\node_modules\\mongoose\\lib\\schemaType.js:1410:9\n    at processTicksAndRejections (node:internal/process/task_queues:85:11)","timestamp":"2025-08-26T07:57:29.399Z"}
{"level":"info","message":"Activity logged for user 68ad659fc281c20980ea7b56","timestamp":"2025-08-26T07:58:17.517Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-26T08:02:47.595Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-26T08:02:47.598Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-26T08:02:48.162Z"}
{"level":"info","message":"Mood entry created for user 68ad659fc281c20980ea7b56","timestamp":"2025-08-26T08:05:38.995Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-29T13:09:10.175Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-29T13:09:10.179Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-29T13:09:11.456Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T12:30:51.742Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T12:30:51.758Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T12:30:53.331Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T12:48:42.571Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T12:48:42.581Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T12:48:44.177Z"}
{"level":"info","message":"Mood entry created for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T15:48:38.308Z"}
{"level":"info","message":"Mood entry created for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T15:48:48.195Z"}
{"level":"info","message":"Mood entry created for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T15:54:21.517Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T16:22:07.780Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T16:22:07.791Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T16:22:08.512Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T16:30:25.938Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T16:30:25.944Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T16:30:26.724Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T16:33:21.555Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T16:33:21.565Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T16:33:22.419Z"}
{"level":"info","message":"Processing message: pls","sessionId":"3764de79-b931-4518-b96c-d9b245f2bd3f","timestamp":"2025-08-30T16:52:33.212Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"pls","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T16:52:33.263Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:138:5)","timestamp":"2025-08-30T16:52:37.124Z"}
{"level":"info","message":"Activity logged for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T16:59:58.723Z"}
{"level":"info","message":"Activity logged for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T16:59:58.732Z"}
{"level":"info","message":"Processing message: gg","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T17:29:47.988Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"gg","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T17:29:48.045Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:138:5)","timestamp":"2025-08-30T17:29:51.598Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:34:21.309Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:34:21.313Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:34:22.070Z"}
{"level":"info","message":"Processing chat message:","timestamp":"2025-08-30T17:36:16.497Z"}
{"error":{"errorDetails":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","domain":"googleapis.com","metadata":{"consumer":"projects/446709098246","quota_limit":"GenerateContentRequestsPerMinutePerProjectPerRegion","quota_limit_value":"0","quota_location":"us-south1","quota_metric":"generativelanguage.googleapis.com/generate_content_requests","quota_unit":"1/min/{project}/{region}","service":"generativelanguage.googleapis.com"},"reason":"RATE_LIMIT_EXCEEDED"},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Request a higher quota limit.","url":"https://cloud.google.com/docs/quotas/help/request_increase"}]}],"status":429,"statusText":"Too Many Requests"},"level":"error","message":"Error in message analysis:","timestamp":"2025-08-30T17:36:18.115Z"}
{"level":"info","message":"Processing chat message:","timestamp":"2025-08-30T17:36:18.280Z"}
{"level":"info","message":"Processing chat message:","timestamp":"2025-08-30T17:36:18.427Z"}
{"error":{"errorDetails":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","domain":"googleapis.com","metadata":{"consumer":"projects/446709098246","quota_limit":"GenerateContentRequestsPerMinutePerProjectPerRegion","quota_limit_value":"0","quota_location":"us-south1","quota_metric":"generativelanguage.googleapis.com/generate_content_requests","quota_unit":"1/min/{project}/{region}","service":"generativelanguage.googleapis.com"},"reason":"RATE_LIMIT_EXCEEDED"},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Request a higher quota limit.","url":"https://cloud.google.com/docs/quotas/help/request_increase"}]}],"status":429,"statusText":"Too Many Requests"},"level":"error","message":"Error generating response:","timestamp":"2025-08-30T17:36:18.736Z"}
{"level":"info","message":"Processing chat message:","timestamp":"2025-08-30T17:36:18.881Z"}
{"level":"info","message":"Processing message: asdasdad","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T17:39:05.063Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"asdasdad","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T17:39:05.105Z"}
{"historyLength":0,"level":"info","message":"Processing chat message: asdasdad","timestamp":"2025-08-30T17:39:05.231Z"}
{"level":"error","message":"Error in sendMessage: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent: [403 Forbidden] Method doesn't allow unregistered callers (callers without established identity). Please use API Key or other form of API consumer identity to call this API.","stack":"Error: [GoogleGenerativeAI Error]: Error fetching from https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent: [403 Forbidden] Method doesn't allow unregistered callers (callers without established identity). Please use API Key or other form of API consumer identity to call this API.\n    at handleResponseNotOk (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\@google\\generative-ai\\dist\\index.js:434:11)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async makeRequest (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\@google\\generative-ai\\dist\\index.js:403:9)\n    at async generateContent (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\@google\\generative-ai\\dist\\index.js:867:22)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:160:28)","status":403,"statusText":"Forbidden","timestamp":"2025-08-30T17:39:05.559Z"}
{"error":{"errorDetails":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","domain":"googleapis.com","metadata":{"consumer":"projects/446709098246","quota_limit":"GenerateContentRequestsPerMinutePerProjectPerRegion","quota_limit_value":"0","quota_location":"us-south1","quota_metric":"generativelanguage.googleapis.com/generate_content_requests","quota_unit":"1/min/{project}/{region}","service":"generativelanguage.googleapis.com"},"reason":"RATE_LIMIT_EXCEEDED"},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Request a higher quota limit.","url":"https://cloud.google.com/docs/quotas/help/request_increase"}]}],"status":429,"statusText":"Too Many Requests"},"level":"error","message":"Error in message analysis: asdasdad","timestamp":"2025-08-30T17:39:05.643Z"}
{"historyLength":0,"level":"info","message":"Processing chat message: asdasdad","timestamp":"2025-08-30T17:39:05.679Z"}
{"historyLength":0,"level":"info","message":"Processing chat message: asdasdad","timestamp":"2025-08-30T17:39:05.830Z"}
{"error":{"errorDetails":[{"@type":"type.googleapis.com/google.rpc.ErrorInfo","domain":"googleapis.com","metadata":{"consumer":"projects/446709098246","quota_limit":"GenerateContentRequestsPerMinutePerProjectPerRegion","quota_limit_value":"0","quota_location":"us-south1","quota_metric":"generativelanguage.googleapis.com/generate_content_requests","quota_unit":"1/min/{project}/{region}","service":"generativelanguage.googleapis.com"},"reason":"RATE_LIMIT_EXCEEDED"},{"@type":"type.googleapis.com/google.rpc.Help","links":[{"description":"Request a higher quota limit.","url":"https://cloud.google.com/docs/quotas/help/request_increase"}]}],"status":429,"statusText":"Too Many Requests"},"level":"error","message":"Error generating response: asdasdad","timestamp":"2025-08-30T17:39:06.805Z"}
{"historyLength":0,"level":"info","message":"Processing chat message: asdasdad","timestamp":"2025-08-30T17:39:06.879Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:42:55.966Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:42:55.973Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:42:56.730Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:48:41.779Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:48:41.787Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:48:42.584Z"}
{"level":"info","message":"Processing message: anx","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T17:56:04.438Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"anx","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T17:56:04.477Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:138:5)","timestamp":"2025-08-30T17:56:08.661Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:57:06.678Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:57:06.692Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:57:06.889Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:57:06.903Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:57:07.574Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:57:07.666Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:57:48.460Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:57:48.469Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:57:48.652Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:57:48.660Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:57:49.274Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:57:49.453Z"}
{"level":"info","message":"Processing message: sdfdsf","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T17:57:56.981Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfdsf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T17:57:57.018Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:138:5)","timestamp":"2025-08-30T17:58:01.255Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:59:10.923Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:59:10.941Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T17:59:11.130Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T17:59:11.141Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:59:11.791Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T17:59:11.876Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:00:32.189Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:00:32.634Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:00:32.637Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:00:32.629Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:00:33.073Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:00:33.076Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:00:33.782Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:00:33.953Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:02:07.154Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:02:07.379Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:02:07.381Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:02:08.316Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:02:52.373Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:02:52.713Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:02:52.715Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:02:52.375Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:02:52.751Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:02:52.753Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:02:53.361Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:02:53.471Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:07:20.700Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:07:20.904Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:07:20.905Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:07:22.009Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:09:03.931Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:09:04.198Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:09:04.200Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:09:04.921Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:27:01.097Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:27:01.650Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:27:01.652Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:27:01.256Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:27:01.715Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:27:01.716Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:27:02.547Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:27:02.553Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:27:55.291Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:27:55.703Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:27:55.705Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:27:56.586Z"}
{"level":"error","message":"GEMINI_API_KEY environment variable is not set","timestamp":"2025-08-30T18:28:13.122Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:28:13.807Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:28:13.814Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:28:14.837Z"}
{"level":"info","message":"Processing message: fdgfdgdfg","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T18:29:44.234Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"fdgfdgdfg","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:29:44.281Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:29:47.962Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:39:05.798Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:39:05.812Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:39:07.363Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:39:19.723Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:39:19.734Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:39:20.497Z"}
{"level":"info","message":"Processing message: sdfsdf","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T18:39:28.416Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfsdf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:39:28.462Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:39:32.570Z"}
{"level":"info","message":"Processing message: sdfsdf","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T18:39:35.266Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfsdf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:39:35.305Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:39:38.314Z"}
{"level":"info","message":"Processing message: sdfsdf","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T18:39:47.717Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfsdf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:39:47.773Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:39:51.427Z"}
{"level":"info","message":"Processing message: sdfsdf","sessionId":"8e52d897-7a6a-4b4b-82b0-2a52809e9a08","timestamp":"2025-08-30T18:40:52.654Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfsdf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:40:52.693Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:40:56.285Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:44:52.134Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:44:52.141Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:44:52.973Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T18:46:53.930Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T18:46:53.943Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T18:46:54.957Z"}
{"level":"info","message":"Activity logged for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T18:47:16.440Z"}
{"level":"info","message":"Activity logged for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T18:47:22.245Z"}
{"level":"info","message":"Mood entry created for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T18:47:46.908Z"}
{"level":"info","message":"Mood entry created for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T18:48:13.619Z"}
{"level":"info","message":"Mood entry created for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T18:48:49.546Z"}
{"level":"info","message":"Activity logged for user 68b307b143f7cf12d653a32e","timestamp":"2025-08-30T18:48:56.027Z"}
{"level":"info","message":"Processing message: dddddddd","sessionId":"3ed0564b-c34d-427f-83b1-a95514bfd44d","timestamp":"2025-08-30T18:49:44.103Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"dddddddd","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:49:44.150Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:49:47.782Z"}
{"level":"info","message":"Processing message: ssssssssss","sessionId":"c950de36-5589-48fc-9986-abe594e1bd19","timestamp":"2025-08-30T18:49:55.097Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"ssssssssss","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:49:55.153Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:49:58.662Z"}
{"level":"info","message":"Processing message: gfhfg","sessionId":"4036e8f3-e15c-4f21-a683-27323664637c","timestamp":"2025-08-30T18:54:19.363Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"gfhfg","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:54:19.401Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:54:23.077Z"}
{"level":"info","message":"Processing message: sdfdsf","sessionId":"4036e8f3-e15c-4f21-a683-27323664637c","timestamp":"2025-08-30T18:56:40.190Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfdsf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:56:40.262Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:56:44.464Z"}
{"level":"info","message":"Processing message: sdfsd","sessionId":"4036e8f3-e15c-4f21-a683-27323664637c","timestamp":"2025-08-30T18:57:43.094Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdfsd","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:57:43.140Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:57:46.947Z"}
{"level":"info","message":"Processing message: asdasd","sessionId":"36cc296f-ded6-4135-9947-f54220127fef","timestamp":"2025-08-30T18:57:53.650Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"asdasd","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T18:57:53.696Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T18:57:57.746Z"}
{"level":"info","message":"Server is running on port 3001","timestamp":"2025-08-30T19:00:30.766Z"}
{"level":"info","message":"Inngest endpoint available at http://localhost:3001/api/inngest","timestamp":"2025-08-30T19:00:30.780Z"}
{"level":"info","message":"connected to the mongoDB","timestamp":"2025-08-30T19:00:31.425Z"}
{"level":"info","message":"Processing message: sdf","sessionId":"590ce48b-a7e9-4f2e-9e98-f7f86153c440","timestamp":"2025-08-30T19:04:09.472Z"}
{"event":{"data":{"goals":[],"history":[],"memory":{"sessionContext":{"conversationThemes":[],"currentTechnique":null},"userProfile":{"emotionalState":[],"preferences":{},"riskLevel":0}},"message":"sdf","systemPrompt":"You are an AI therapist assistant. Your role is to:\n        1. Provide empathetic and supportive responses\n        2. Use evidence-based therapeutic techniques\n        3. Maintain professional boundaries\n        4. Monitor for risk factors\n        5. Guide users toward their therapeutic goals"},"name":"therapy/session.message"},"level":"info","message":"Sending message to Inngest:","timestamp":"2025-08-30T19:04:09.511Z"}
{"level":"error","message":"Error in sendMessage: Inngest API Error: 401 Event key not found","stack":"Error: Inngest API Error: 401 Event key not found\n    at Inngest.getResponseError (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:386:12)\n    at body.maxAttempts.maxAttempts (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:688:28)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async retryWithBackoff (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\helpers\\promises.ts:247:14)\n    at async Inngest._send (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\node_modules\\src\\components\\Inngest.ts:667:18)\n    at async sendMessage (C:\\Users\\Nom\\Desktop\\Thinkease-app\\backend\\src\\controllers\\chat.ts:141:5)","timestamp":"2025-08-30T19:04:13.303Z"}
